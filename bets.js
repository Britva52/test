document.addEventListener('DOMContentLoaded', function() {
    const betInput = document.querySelector('.bets-container .bet-input');
    const placeBetBtn = document.querySelector('.place-bet-btn');
    const outcomeBtns = document.querySelectorAll('.outcome-btn');
    const messageBox = document.getElementById('bets-message');
    let selectedOutcome = null;

    // –°–æ–∑–¥–∞–µ–º –ø–∞–¥–∞—é—â–∏–µ —Ñ–∏—à–∫–∏ –¥–ª—è —Ñ–æ–Ω–∞
    function createFallingChips() {
        const container = document.querySelector('.bets-container');
        const chipCount = 8;

        for (let i = 0; i < chipCount; i++) {
            const chip = document.createElement('div');
            chip.className = 'chip';
            chip.style.left = `${Math.random() * 100}%`;
            chip.style.animation = `chipFall ${3 + Math.random() * 4}s linear ${Math.random() * 5}s infinite`;
            container.appendChild(chip);
        }
    }

    createFallingChips();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏—Å—Ö–æ–¥–æ–≤
    outcomeBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            outcomeBtns.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            selectedOutcome = {
                element: this,
                multiplier: parseFloat(this.dataset.multiplier)
            };

            // –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞
            this.style.transform = 'scale(1.1)';
            setTimeout(() => {
                this.style.transform = 'scale(1.05)';
            }, 200);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞–≤–∫–∏
    placeBetBtn.addEventListener('click', async function() {
        if (!selectedOutcome) {
            showMessage("–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥ —Å–æ–±—ã—Ç–∏—è", false);
            return;
        }

        const betAmount = parseFloat(betInput.value);
        if (isNaN(betAmount) || betAmount <= 0) {
            showMessage("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É", false);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ (–∑–∞–≥–ª—É—à–∫–∞)
        const balance = 1000; // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
        if (betAmount > balance) {
            showMessage("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤", false);
            return;
        }

        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è "—Å—Ç–∞–≤–∫–∏"
        placeBetBtn.disabled = true;
        placeBetBtn.textContent = "–û–±—Ä–∞–±–æ—Ç–∫–∞...";

        showMessage("–°—Ç–∞–≤–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...", true);

        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É
        setTimeout(() => {
            const isWin = Math.random() > 0.5; // 50% —à–∞–Ω—Å –Ω–∞ –ø–æ–±–µ–¥—É

            if (isWin) {
                const winAmount = (betAmount * selectedOutcome.multiplier).toFixed(2);
                showMessage(`üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${winAmount}$!`, true);
                selectedOutcome.element.classList.add('win-flash');

                // –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã–∏–≥—Ä—ã—à–∞
                placeBetBtn.classList.add('win-flash');
            } else {
                showMessage("‚ùå –°—Ç–∞–≤–∫–∞ –Ω–µ —Å—ã–≥—Ä–∞–ª–∞", false);
                selectedOutcome.element.classList.add('lose-shake');

                // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–∏–≥—Ä—ã—à–∞
                placeBetBtn.classList.add('lose-shake');
            }

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            setTimeout(() => {
                placeBetBtn.disabled = false;
                placeBetBtn.textContent = "–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É";
                selectedOutcome.element.classList.remove('win-flash', 'lose-shake');
                placeBetBtn.classList.remove('win-flash', 'lose-shake');
            }, 2000);
        }, 1500);
    });

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    function showMessage(text, isSuccess) {
        messageBox.textContent = text;
        messageBox.className = 'message-box';

        if (isSuccess) {
            messageBox.classList.add('win');
        } else {
            messageBox.classList.add('error');
        }
    }
});